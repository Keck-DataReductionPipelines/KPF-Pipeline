# test_kpf_masters_drp_recipe.py

"""
Regression test for the kpf_masters_drp_recipe on a limited data set.

Input data are in /data/KPF-Pipeline-TestData/kpf/L0/20250307.
There are 32 input L0 FITS files, listed as follows:

[rlaher@shrek 20250307]$ /data/user/rlaher/git/neid/src/perl/filterFITSimages.pl -p IMTYPE,EXPTIME,ELAPSED,OBJECT *fits
| Count         | Filename                  | IMTYPE      | EXPTIME     | ELAPSED     | OBJECT                 |
| i             | c                         | c           | c           | c           | c                      |
              1   KP.20250307.00021.83.fits      Flatlamp          10.0        10.019         autocal-flat-all
              2   KP.20250307.00080.37.fits      Flatlamp          10.0          10.0         autocal-flat-all
              3   KP.20250307.00138.77.fits      Flatlamp          10.0          10.0         autocal-flat-all
              4   KP.20250307.00197.08.fits      Flatlamp          10.0          10.0         autocal-flat-all
              5   KP.20250307.00255.58.fits      Flatlamp          10.0        10.016         autocal-flat-all
              6   KP.20250307.00314.18.fits      Flatlamp          10.0        10.076         autocal-flat-all
              7   KP.20250307.00372.82.fits      Flatlamp          10.0        10.051         autocal-flat-all
              8   KP.20250307.00431.41.fits      Flatlamp          10.0          10.0         autocal-flat-all
              9   KP.20250307.00489.87.fits      Flatlamp          10.0        10.015         autocal-flat-all
             10   KP.20250307.00548.19.fits      Flatlamp          10.0          10.0         autocal-flat-all
             11   KP.20250307.00606.53.fits      Flatlamp          10.0        10.061         autocal-flat-all
             12   KP.20250307.03636.94.fits          Bias           0.0         0.024             autocal-bias
             13   KP.20250307.03686.83.fits          Bias           0.0         0.019             autocal-bias
             14   KP.20250307.03736.85.fits          Bias           0.0          0.02             autocal-bias
             15   KP.20250307.03786.80.fits          Bias           0.0         0.021             autocal-bias
             16   KP.20250307.03836.71.fits          Bias           0.0           0.0             autocal-bias
             17   KP.20250307.03886.63.fits          Bias           0.0           0.0             autocal-bias
             18   KP.20250307.03936.68.fits          Bias           0.0           0.0             autocal-bias
             19   KP.20250307.04184.68.fits          Dark        1200.0        1200.0             autocal-dark
             20   KP.20250307.08950.72.fits          Dark        1200.0        1200.0             autocal-dark
             21   KP.20250307.61770.12.fits          Dark        1200.0        1200.0             autocal-dark
             22   KP.20250307.65367.06.fits          Dark        1200.0        1200.0             autocal-dark
             23   KP.20250307.67445.34.fits       Arclamp          60.0          60.0     autocal-lfc-all-morn
             24   KP.20250307.67553.80.fits       Arclamp          60.0        60.019     autocal-lfc-all-morn
             25   KP.20250307.67662.32.fits       Arclamp          60.0          60.0     autocal-lfc-all-morn
             26   KP.20250307.67770.90.fits       Arclamp          60.0         60.02     autocal-lfc-all-morn
             27   KP.20250307.67879.27.fits       Arclamp          60.0        60.018     autocal-lfc-all-morn
             28   KP.20250307.67987.67.fits       Arclamp          60.0          60.0     autocal-lfc-all-morn
             29   KP.20250307.68096.01.fits       Arclamp          60.0          60.0     autocal-lfc-all-morn
             30   KP.20250307.68204.50.fits       Arclamp          60.0         60.02     autocal-lfc-all-morn
             31   KP.20250307.68312.87.fits       Arclamp          60.0        60.103     autocal-lfc-all-morn
             32   KP.20250307.68421.37.fits       Arclamp          60.0          60.0     autocal-lfc-all-morn

There are 4 FITS 2D master files generated by this unit test i /data/KPF-Pipeline-TestData/kpf/masters/pool.

[rlaher@shrek pool]$ /data/user/rlaher/git/neid/src/perl/filterFITSimages.pl -p IMTYPE,OBJECT *fits
| Count         | Filename                                              | IMTYPE      | OBJECT                 |
| i             | c                                                     | c           | c                      |
              1   kpf_20250307_master_arclamp_autocal-lfc-all-morn.fits       Arclamp     autocal-lfc-all-morn
              2   kpf_20250307_master_bias_autocal-bias.fits                     Bias             autocal-bias
              3   kpf_20250307_master_dark_autocal-dark.fits                     Dark             autocal-dark
              4   kpf_20250307_master_flat.fits                                  Flat         autocal-flat-all
"""

from kpfpipe.tools.recipe_test_unit import recipe_test
from kpfpipe.pipelines.kpf_parse_ast import RecipeError
import os
from astropy.io import fits
import numpy as np


masters_test_date = '20250307'
l0dir = '/data/L0/' + masters_test_date
l2ddir = '/data/2D/' + masters_test_date
pooldir = '/masters/pool'
master_stacks_recipe = open('recipes/kpf_masters_drp.recipe', 'r').read()
master_stacks_config = 'configs/kpf_masters_drp.cfg'


def computed_unclipped_statistics(input_filename,hdu_index):

    # Read in FITS image from specified HDU.

    hdul = fits.open(input_filename)
    data_array = hdul[hdu_index].data
    a = np.array(data_array)

    # Compute unclipped statistics.

    unclipped_mean = np.nanmean(a)
    unclipped_stddev = np.nanstd(a)

    print("input_filename =",input_filename)
    print("unclipped_mean =",unclipped_mean)
    print("unclipped_stddev =",unclipped_stddev)

    return unclipped_mean,unclipped_stddev


def test_master_stacks():
    print("\n")
    print("l0dir =",l0dir)
    os.system(f'ls {l0dir}')
    os.system(f'rm -vrf {l2ddir}')
    os.system(f'mkdir -vp {l2ddir}')
    os.system(f'rm -vf {pooldir}/*')
    recipe_test(master_stacks_recipe, master_stacks_config, date_dir=masters_test_date)

    master_bias_filename = pooldir + '/kpf_20250307_master_bias_autocal-bias.fits'
    master_dark_filename = pooldir + '/kpf_20250307_master_dark_autocal-dark.fits'
    master_flat_filename = pooldir + '/kpf_20250307_master_flat.fits'
    master_arcl_filename = pooldir + '/kpf_20250307_master_arclamp_autocal-lfc-all-morn.fits'

    # Compute statistics on GREEN_CCD image.

    hdu_index = 3        # Zero-based index.
    unclipped_mean_bias,unclipped_stddev_bias = computed_unclipped_statistics(master_bias_filename,hdu_index)
    unclipped_mean_dark,unclipped_stddev_dark = computed_unclipped_statistics(master_dark_filename,hdu_index)
    unclipped_mean_flat,unclipped_stddev_flat = computed_unclipped_statistics(master_flat_filename,hdu_index)
    unclipped_mean_arcl,unclipped_stddev_arcl = computed_unclipped_statistics(master_arcl_filename,hdu_index)

    assert np.float64(unclipped_mean_bias) > 2.3423 and np.float64(unclipped_mean_bias) < 2.3424
    assert np.float64(unclipped_mean_dark) > 0.002114 and np.float64(unclipped_mean_dark) < 0.002116
    assert np.float64(unclipped_mean_flat) > 1.0734 and np.float64(unclipped_mean_flat) < 1.0735
    assert np.float64(unclipped_mean_arcl) > 2079.4 and np.float64(unclipped_mean_arcl) < 2079.6


def main():
    test_master_stacks()


if __name__ == '__main__':
    main()
