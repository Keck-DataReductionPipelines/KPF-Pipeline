# This recipe on quicklook_watch.recipe, which 
# is used to watch a [L0/2D/L1/L2/masters] directory for modified 
# files and then to run the appropriate section of the QLP 
# (L0/2D/L1/L2/masters) to generate standard data products.  It must be run 
# in watch mode.  Separate instances should to be run for L0, 2D, L1, L2, 
# and masters data directories.  In this version of the recipe, only 
# files not from recent observations (more than one day ago) are processed 
# to compute QLP data products.  The observation date is determined by the 
# date encoded into the filename.
#
# Examples:
#    > kpf --ncpus=2 --watch /data/ -c configs/quicklook_watch.cfg -r recipes/quicklook_watch_only_recent.recipe
#    > kpf --ncpus=2 --watch /data/L1/20240118/ -c configs/quicklook_watch.cfg -r recipes/quicklook_watch_only_recent.recipe

from modules.Utils.string_proc import level_from_kpffile
from modules.Utils.string_proc import date_from_kpffile
from modules.Utils.string_proc import date_from_path
from modules.Utils.string_proc import days_since_observation
from modules.quicklook.src.quick_prim import Quicklook


file_path = context.file_path # from context in watch mode, e.g.  
                              # /data/2D/20230711/KP.20230711.00415.52_2D.fits
datecode = date_from_path(file_path)
days_since = days_since_observation(file_path)

if days_since > 0.95 and days_since != 0:
    abc = 'abc'

if days_since > 0.95 and days_since != 0:
    if 'masters' in file_path: # Masters
        output_dir= '/data/QLP/' + datecode + '/Masters/'
        Quicklook(file_path, output_dir, 'master')
    else: # L0/2D/L1/L2
        level = level_from_kpffile(file_path)  # 'L0', '2D', 'L1', 'L2', None
        output_dir= '/data/QLP/' + datecode + '/'
        if level != None:
            if level == 'L0':
                open_file = kpf0_from_fits(file_path, data_type='KPF')
            if level == '2D':
                open_file = kpf0_from_fits(file_path, data_type='KPF')
            if level == 'L1':
                open_file = kpf1_from_fits(file_path, data_type='KPF')
            if level == 'L2':
                open_file = kpf2_from_fits(file_path, data_type='KPF')
            Quicklook(open_file, output_dir, level)
