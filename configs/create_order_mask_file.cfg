## Pipeline logger configurations
[LOGGER]
start_log = True
log_path = pipeline.log
log_level = info
log_verbose = True
log_directory = /data/logs/

[ARGUMENT]
data_type = KPF
overwrite = True

input_masters_dir = /masters/
input_dir = /data/2D/
output_dir = /data/masters

# The lev0_2d_file should be an Arclamp exposure from the same observation date as the the order-trace files.
# Not sure, but I think it is only used to determine image data shape.
# The recipe now finds an exemplar Arclamp exposure 2D file automatically, so it is deprecated.
#lev0_2d_file = KP.20240211.50819.86_2D.fits

input_flat_file_pattern = kpf_yyyymmdd_master_flat.fits

ccd_list = ['GREEN_CCD', 'RED_CCD']
ccd_idx = [0, 1]
#
# The start_order parameter list must be set manually, according to whether
# there are 35x5=175 data lines plus header line (total is 176 lines) for GREEN_CCD
# and 32x5=160 data lines plus header line (total is 161 lines) for RED_CCD.
# If so, start_order for a given chip is 0; otherwise, if missing one data line,
# set start_order to -1 (not sure what to do if missing more than one data line
# for a given chip (ask Cindy).
# cat /data/kpf/masters/20230716/kpf_20230716_master_flat_GREEN_CCD.csv |wc
#     175     175   19242
# cat /data/kpf/masters/20230716/kpf_20230716_master_flat_RED_CCD.csv |wc
#     160     160   17579
# In this case, each chip has a missing data line, so start_order = [-1, -1].
#
# cat /data/kpf/masters/20240211/kpf_20240211_master_flat_GREEN_CCD.csv |wc
#    176     176   19382
# cat /data/kpf/masters/20240211/kpf_20240211_master_flat_RED_CCD.csv |wc
#    162     162   17886
# In this case, the first chip has 175 data lines and the second chip has 161 data lines, so start_order = [0, +1].

# The start_order parameters are now computed dynamically in the recipe.
# start_order = [0, 1]

orderlet_names = [['GREEN_SKY_FLUX', 'GREEN_SCI_FLUX1', 'GREEN_SCI_FLUX2', 'GREEN_SCI_FLUX3', 'GREEN_CAL_FLUX'], ['RED_SKY_FLUX', 'RED_SCI_FLUX1', 'RED_SCI_FLUX2', 'RED_SCI_FLUX3', 'RED_CAL_FLUX']]
# Reduce all orderlet positive mask regions by some number of pixels below and above trace center.
# Ran on 20230502
#orderlet_widths_ccds = [[3, 3, 3, 3, 2], [3, 3, 3, 3, 2]]
# Ran on 20230717
#orderlet_widths_ccds = [[[4,3], [4,3], [4,3], [4,3], 2], [[4,3], [4,3], [4,3], [4,3], 2]]
# Ran on 20230719 for 20230716 CSV files: untrimmed for smooth lamp pattern
#orderlet_widths_ccds = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
# Ran on 20230719: slightly trimmed for master flat
#orderlet_widths_ccds = [[2, 2, 2, 2, 2], [2, 2, 2, 2, 2]]
# Ran on 20230804 for 20230730 CSV files: untrimmed for smooth lamp pattern
orderlet_widths_ccds = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
orderlet_values = [[1,2,3,4,5],[1,2,3,4,5]]

# config file associated with the modules
[MODULE_CONFIGS]
order_trace = modules/order_trace/configs/default_recipe_kpf_20220505.cfg
